basePath: /
definitions:
  swagger.LoginRequestPayload:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    type: object
  swagger.SignupDTO:
    properties:
      dob:
        type: string
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - dob
    - full_name
    - password
    - phone_number
    type: object
  user.ForgotPasswordRequestPayload:
    properties:
      email:
        type: string
    type: object
  user.ResetPasswordPayload:
    properties:
      password:
        type: string
      token:
        type: string
      user:
        type: integer
    required:
    - password
    - token
    - user
    type: object
host: localhost:4000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: OctoMed
  version: "1.0"
paths:
  /users/create:
    post:
      consumes:
      - application/json
      description: Create a user with email and password provider
      parameters:
      - description: Create User Request
        in: body
        name: CreateUserRequest
        required: true
        schema:
          $ref: '#/definitions/swagger.SignupDTO'
      produces:
      - application/json
      responses: {}
      summary: Create a user with email and password
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: Login Request
        in: body
        name: LoginPayload
        required: true
        schema:
          $ref: '#/definitions/swagger.LoginRequestPayload'
      produces:
      - application/json
      responses: {}
      summary: Login
      tags:
      - users
  /users/request-forgot-password:
    post:
      consumes:
      - application/json
      description: Request for password reset
      parameters:
      - description: Request Reset password
        in: body
        name: ForgotPasswordRequestPayload
        required: true
        schema:
          $ref: '#/definitions/user.ForgotPasswordRequestPayload'
      produces:
      - application/json
      responses: {}
      summary: Request for password reset
      tags:
      - users
  /users/reset-password:
    post:
      consumes:
      - application/json
      description: Password reset
      parameters:
      - description: Reset password
        in: body
        name: ResetPasswordPayload
        required: true
        schema:
          $ref: '#/definitions/user.ResetPasswordPayload'
      produces:
      - application/json
      responses: {}
      summary: Password reset
      tags:
      - users
swagger: "2.0"
