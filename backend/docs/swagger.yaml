definitions:
  models.Address:
    properties:
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      id:
        type: integer
      region:
        type: string
      street:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
    type: object
  models.Allergy:
    properties:
      allergy:
        type: string
      created_at:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    type: object
  models.BioData:
    properties:
      allergies:
        items:
          $ref: '#/definitions/models.Allergy'
        type: array
      health_conditons:
        items:
          $ref: '#/definitions/models.HealthCondition'
        type: array
      height:
        type: integer
      height_metric:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/models.User'
      user_id:
        type: integer
      weight:
        type: integer
      weight_metric:
        type: string
    type: object
  models.HealthCondition:
    properties:
      created_at:
        type: string
      health_condition:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      address_id:
        type: integer
      avatar:
        type: string
      biodata:
        $ref: '#/definitions/models.BioData'
      biodata_id:
        type: integer
      created_at:
        type: string
      dob:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_deleted:
        type: boolean
      last_login:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    required:
    - first_name
    - last_name
    - password
    type: object
info:
  contact: {}
paths:
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get details of a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get a user
      tags:
      - users
swagger: "2.0"
